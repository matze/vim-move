*move.txt* Moving lines and selections up and even down

Author: Matthias Vogelgesang <github.com/matze>
License: MIT (see |move-license|)

===============================================================================
Contents                                                        *move-contents*

    1. Usage..................................|move-usage|
    2. Mappings...............................|move-mappings|
    3. License................................|move-license|
    4. Changelog..............................|move-changelog|

===============================================================================
1. Usage                                                           *move-usage*

The move plugin is used to move lines and visual selections up and down by
wrapping the :move command.

===============================================================================
2. Mappings                                                     *move-mappings*

To enable/disable automatic key maps you can define the variable
g:move_map_keys in to 1 or 0 respectively. IE, if you want to define your own
key mappings you would put in your vimrc: >

    let g:move_map_keys = 0

The default value of g:move_map_keys is 1 so all mappings are usually defined.

The automatic key maps also can be enabled/disabled by parts defining
g:move_map_keys as a dictionary instad of an integer. This can be
done through the entries 'vertical' and 'horizontal' each of which should be
also a dictionary with the integer (boolean) entries 'normal' and 'visual'.
With that in mind, if you want to have the vertical mappings only enabled in
visual mode but the horizontal mappings to be enabled in both modes you can
define g:move_map_keys as: >

    let g:move_map_keys = {}
    let g:move_map_keys.vertical = {'normal': 0, 'visual': 1}
    let g:move_map_keys.horizontal = {'normal': 1, 'visual': 1}

Or, as the default values of all entries are also 1, it can be simply
written as: >

    let g:move_map_keys = {'vertical': {'normal': 0}}

The plugin provide finger-friendly mappings to move text around by using <jk>
keys. You can specify the key modifier that is used in key bindings with >

    let g:move_key_modifier = 'M'

Mapping the meta ("alt") key may not work on certain terminals, in this case
you have to map each key directly and may have to use an escape sequence using
<C-v>. On Mac you may also have to change the interpretation of the meta key
in the options (Terminal: "Use Option as Meta key", iTerm: "Left option key
acts as +Esc").

All mappings can be prefixed with a {count} and will move {count} steps
instead of one.

By default the plugin indents the buffer after every up/down move operation.
Can be disabled with >

    let g:move_auto_indent = 0

By default the left/right move operations can move text beyond the limit of
the line. Can be disabled with >

    let g:move_past_end_of_line = 0

-------------------------------------------------------------------------------
2.1 <Plug>MoveBlockDown

Move selected block down by one line.

Default: vmap <A-j> <Plug>MoveBlockDown

-------------------------------------------------------------------------------
2.2 <Plug>MoveBlockUp

Move selected block up by one line.

Default: vmap <A-k> <Plug>MoveBlockUp

-------------------------------------------------------------------------------
2.3 <Plug>MoveBlockLeft

Move selected block left by one column.

Default: vmap <A-h> <Plug>MoveBlockLeft

-------------------------------------------------------------------------------
2.4 <Plug>MoveCharRight

Move selected block right by one column.

Default: vmap <A-l> <Plug>MoveBlockRight

-------------------------------------------------------------------------------
2.5 <Plug>MoveLineDown

Move current line down by one.

Default: nmap <A-j> <Plug>MoveLineDown

-------------------------------------------------------------------------------
2.6 <Plug>MoveLineUp

Move current line up by one.

Default: nmap <A-k> <Plug>MoveLineUp

-------------------------------------------------------------------------------
2.7 <Plug>MoveCharLeft

Move current line left by one.

Default: nmap <A-h> <Plug>MoveCharLeft

-------------------------------------------------------------------------------
2.8 <Plug>MoveCharRight

Move current line right by one.

Default: nmap <A-l> <Plug>MoveCharRight

-------------------------------------------------------------------------------
2.9 <Plug>MoveBlockHalfPageDown

Move selected block down by half a page size.

Default: not mapped

-------------------------------------------------------------------------------
2.10 <Plug>MoveBlockHalfPageUp

Move selected block up by half a page size.

Default: not mapped

-------------------------------------------------------------------------------
2.11 <Plug>MoveLineHalfPageDown

Move current line down by half a page size.

Default: not mapped

-------------------------------------------------------------------------------
2.12 <Plug>MoveLineHalfPageUp

Move current line up by half a page size.

Default: not mapped

===============================================================================
3. License                                                       *move-license*

This plugin is copyright by Matthias Vogelgesang and licensed under the MIT
license.

===============================================================================
3. Changelog                                                   *move-changelog*

v1.4.1
    * Bug corrections from 1.4
    * If vertical movement receives a count past end of file, it moves to the
      end instead of staying in place.
    * The standard mappings can be enabled by parts through a dictionary.

v1.4
    * Released on 08/19/18
    * New functionality for moving horizontally
    * Add g:move_past_end_of_line to control the move to the right.

v1.3
    * Released on 03/18/14
    * Add g:move_auto_indent option to en-/disable auto indentation
    * Do not modify readonly buffers
    * Silence :move commands to avoid first-time errors on read-only files.

v1.2
    * Released on 08/14/13
    * Add key modifier for bindings (@vitalk)
    * Use <A-j> and <A-k> in normal and visual mode (@vitalk)
    * Add <Plug>Move{Block,Line}HalfPage{Up,Down} to move text in larger
      increments.
v1.1
    * Released on 08/10/13
    * Minor bug fixes (helptags, mapping, docs)
v1.0
    * Released on 08/10/13

vim:ft=help:
